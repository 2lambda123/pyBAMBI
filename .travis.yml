# linux matrix
#language: python
#os: linux
#python:
#    - "3.7"
#    - "3.6"
#    - "3.5"
#env:
#  - MPI=
#  - MPI=1

# OSX matrix
matrix:
    include:
        - os: osx
          language: generic
          env: MPI=


# System packages
addons:
    apt:
        packages:
            - gfortran
            - libblas-dev
            - liblapacke-dev
            - openmpi-bin
            - libopenmpi-dev
    homebrew:
        packages: 
            - gcc
            - imagemagick
        update: true

before_install:
    # OSX setup
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]];
      then 
          brew unlink gcc && brew link gcc;
          python3 -m venv venv;
          source venv/bin/activate;
          pip install --upgrade "https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.12.0-py3-none-any.whl";
      fi

    # PolyChord install
    - pip install numpy
    - git clone https://github.com/PolyChord/PolyChordLite PolyChord
    - cd PolyChord
    - make MPI=$MPI pypolychord
    - if [ "$MPI" ]; then 
          CC=mpicc CXX=mpicxx python setup.py install;
      else 
          python setup.py install;
      fi
    - cd ..

    # MultiNest install
    - git clone https://github.com/farhanferoz/MultiNest MultiNest_repo
    - cp -r MultiNest_repo/MultiNest_v3.12_CMake/multinest MultiNest
    - mkdir -p MultiNest/build
    - cd MultiNest/build
    - cmake ..
    - if [ "$MPI" ]; then 
          make multinest_mpi_shared;
      else
          make multinest_shared;
      fi;
    - cd ../../
    - export LD_LIBRARY_PATH=$PWD/MultiNest/lib/:${LD_LIBRARY_PATH} 

    # PyMultiNest install
    - git clone https://github.com/JohannesBuchner/PyMultiNest PyMultiNest
    - cd PyMultiNest
    - python setup.py install
    - cd ..
    - mkdir chains


install:
    - pip install -r requirements.txt
    - pip install pytest-cov codecov
    - pip install flake8 pydocstyle sphinx sphinx_rtd_theme
    - if [ "$MPI" ]; then pip install mpi4py; fi

before_script:
    # Test for pep-compliance
    - flake8 pybambi tests

    # Test for documentation referencing
    - sphinx-build docs/source docs/build -nW

    # Test for documentation style
    - pydocstyle pybambi

# Run tests
script:
    - if [ "$MPI" ];
      then mpirun -np 2 python -m pytest tests;
      else python -m pytest tests --cov=pybambi;
      fi

# Run coverage summary
after_success:
    - codecov
    - bash <(curl -s https://codecov.io/bash)
