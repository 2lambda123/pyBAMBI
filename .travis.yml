# linux matrix
language: python
os: linux
python:
    - "3.6"
    #    - "3.5"
    #    - "3.4"
    #- "2.7"
env:
  - MPI=
    #  - MPI=1

# OSX matrix
matrix:
    include:
        - os: osx
          language: generic
          env: PYTHON_VERSION=python2 MPI=
        - os: osx
          language: generic
          env: PYTHON_VERSION=python2 MPI=1
        - os: osx
          language: generic
          env: PYTHON_VERSION=python3 MPI=
        - os: osx
          language: generic
          env: PYTHON_VERSION=python3 MPI=1


# System packages
addons:
    apt:
        packages:
            - gfortran
            - libblas3
            - liblapack3
            - openmpi-bin
            - libopenmpi-dev
    homebrew:
        packages: 
            - gcc
            - glibc
            - open-mpi

# OSX setup
before_install:
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]];
      then 
          pip install virtualenv;
          virtualenv venv -p $PYTHON_VERSION;
          source venv/bin/activate;
      fi

# Installation procedure
install:
    - mkdir external
    - cd external

    # PolyChord install
    - git clone https://github.com/PolyChord/PolyChordLite PolyChord
    - cd PolyChord
    - make MPI=$MPI pypolychord
    - python setup.py install
    - cd ..

    # MultiNest install
    - git clone https://github.com/JohannesBuchner/MultiNest MultiNest
    - cd MultiNest/build
    - cmake ..
    - make
    - cd ../../
    - export LD_LIBRARY_PATH=$PWD/MultiNest/lib/:${LD_LIBRARY_PATH} 

    # PyMultiNest install
    - git clone https://github.com/williamjameshandley/PyMultiNest PyMultiNest
    - cd PyMultiNest
    - python setup.py install
    - cd ..

    # requirements install
    - cd ..
    - pip install -r requirements.txt
    - pip install pytest pytest-cov codecov
    - if [ "$MPI" ]; then pip install mpi4py; fi

# Run tests
script:
    - if [ "$MPI" ];
      then mpirun -np 2 python -m pytest tests;
      else python -m pytest tests --cov=pybambi;
      fi

# Run coverage summary
after_success:
    - codecov
